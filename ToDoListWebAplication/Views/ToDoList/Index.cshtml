@model IEnumerable<ToDoListWebAplication.Models.ToDoItem>

@{
    ViewData["Title"] = "Index";
}
<h1>Your TO DO list</h1>


<p>
    <a asp-action="Create">
        <input type="submit" value="Add new TO DO item" class="btn btn-success" />
    </a>
</p>


<form asp-action="Index">
    <div class="col-md-4">
        <div class="form-group">
            Show TO DO list for date:
            <input class="form-control" type="date" name="date" id="Date" value="@DateTime.Now.Date" />
            <input type="submit" value="Filter" class="btn btn-primary" />
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Content
            </th>
            <th>
                Date to finish
            </th>
            <th>
                Is Done
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.Content
                </td>
                <td>
                    @item.DateTime
                </td>
                <td>
                    @if (item.IsDone)
                    {
                        <a>Completed</a>
                    }
                    else
                    {
                        <a asp-action="SetAsDone" asp-route-id="@item.Id">Finish it!</a>
                    }

                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id"><input type="submit" value="Edit" class="btn btn-primary" /></a> |
                    <a asp-action="Delete" asp-route-id="@item.Id"><input type="submit" value="Delete" class="btn btn-danger" /></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
